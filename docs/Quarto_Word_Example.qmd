---
title: "Quarto Word Example"
format: 
  docx:
    toc: true
editor: visual
---

```{r setup, include=F}

# this line specifies options for default options for all R Chunks
knitr::opts_chunk$set(echo=F)

# suppress scientific notation
options(scipen=100,
        getSymbols.warning4.0 = FALSE)

# install helper package (pacman), if needed
if (!require("pacman")) install.packages("pacman", repos = "http://lib.stat.cmu.edu/R/CRAN/")

# install and load required packages
# pacman should be first package in parentheses and then list others
pacman::p_load(pacman,tidyverse, knitr, gt, tidyquant)

# verify packages (comment out in finished documents)
p_loaded()

```

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

<br>

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

<br>

## Code and Output in Word Document

```{r cars_summary, echo = TRUE}
summary(cars)
```

<br>

## In-line code Example

The following text includes in-line code. A linear model is created and saved in the R chunk. and then components of that model output used in the sentence that follows.

```{r cars_model, echo = T}
cmod <- lm(dist ~ speed, data = cars)
scmod <- summary(cmod)
```

Based on the available data in the base R software (R Core team, 2022), stopping distance in feet for cars in the 1920s was estimated as `r  round(cmod$coefficients[1],2)` + `r round(cmod$coefficients[2],2)` x speed (mpg). and the R^2^ for this linear model is `r round(scmod$r.squared,2)`.

<br>

## Basic Plot

```{r cars_plot}
plot(cars)
```

<br>

## Star Wars Plot from Week 1

```{r formatted_sw_plot, fig.align='center'}

my_starwars_plt <- starwars |>
  select(species, sex, height, mass) |>
  filter(species %in% c("Human", "Droid")) |>
  mutate(bmi = mass/((height/100))^2) |>
  filter(!is.na(bmi)) |>
  mutate(sexF = factor(sex, 
                       levels = c("male", "female", "none"),
                       labels =c("Male", "Female", "None")))

# formatted plot with factor variable, text formatted, and borders
(sw_box4 <- my_starwars_plt |>
  ggplot() +
  geom_boxplot(aes(x=species, y=bmi, fill=sexF)) + 
  theme_classic() + 
  labs(title="Comparison of Human and Droid BMI",
       subtitle="22 Humans and 4 Droids from Star Wars Universe",
       caption="Data Source: dplyr package in R",
       x="",y="BMI", fill="Sex") + 
  theme(panel.border = element_rect(colour = "lightgrey", fill=NA, linewidth=2)))
```

## gt Tables

-   Tables created from the exact same code will appear differently in different output formats.

-   Note that these are the large and small `gt` tables of stock data shown in the Week 13 slides.

First we present the full table and note that the Quarto automatically numbers the tables.

```{r import_data, include=F, message=FALSE}
getSymbols("^GSPC", from="2022-01-01", to="2022-11-01") 
```

```{r full_table, echo=FALSE, message=F}
snp22 <- GSPC |>
  fortify.zoo() |> as_tibble(.name_repair = "minimal") |>
  rename("date" = "Index") |>
  mutate(mnth=month(date))|>
  group_by(mnth) |>
  filter(date==max(date)) |>  # filtered data to last day of each month
  ungroup() |>
  select(-c(6,8))    # remove volume and month variables
names(snp22)[2:6] <- c("Open", "High", "Low", "Close", "Adjusted")

(snp_fmt <- snp22 |>
  gt(rowname_col = "date") |>
  tab_header(title = "S&P 500",
             subtitle = "Last Day of Each Month in 2022") |>
  tab_stubhead(label = "Date") |>
  fmt_date(columns=date, date_style=3) |>  
  fmt_currency(columns=Open:Adjusted, currency = "USD")|> 
  tab_footnote("Data Source: https://finance.yahoo.com") |>
  tab_footnote("Symbol: ^GSPC"))

```

<br>

There is does not appear to be page break feature yet, but we can use `<br>` to add spaces.

As mentioned in the Week 13 slides, we can also show an edited version of this table.

<br>

```{r edited_smaller_table}

(snp_sm <- snp22 |>
select(1,3,6) |>
  gt(rowname_col = "date") |>
  tab_header(title = "S&P 500",
             subtitle = "2022 - Last Day of Each Month") |>
  tab_stubhead(label = "Date") |>
  fmt_date(columns=date, date_style=6) |>                   
  fmt_currency(columns=High:Adjusted, 
               currency = "USD")|>     
  tab_footnote("Source: https://finance.yahoo.com") |>
  tab_footnote("Symbol: ^GSPC"))

```

<br>

<br>

## Citations

Note that the citations below were copied without editing from part of the R console output. If you are are creating your memos in RStudio (not required), these citations are already formatted for you.

Dancho M, Vaughan D (2022). *tidyquant: Tidy Quantitative Financial Analysis*. R package version 1.0.5, <https://CRAN.R-project.org/package=tidyquant>.

Iannone R, Cheng J, Schloerke B, Hughes E, Seo J (2022). *gt: Easily Create Presentation-Ready Display Tables*. R package version 0.8.0, <https://CRAN.R-project.org/package=gt>.

R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

Rinker, T. W. & Kurkiewicz, D. (2017). pacman: Package Management for R. version 0.5.0. Buffalo, New York. http://github.com/trinker/pacman

RStudio Team (2022). RStudio: Integrated Development Environment for R. RStudio, PBC, Boston, MA URL http://www.rstudio.com/.

Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Françoi R, Grolemun G, Haye A, Henr L, Heste J, Kuh M, Pederse TL, Mille E, Bach SM, Müll K, Oo ,J, Robins ,D, Seid ,DP, Spi ,V, Takahas ,K, Vaugh ,D, Wil ,C, W ,K, Yutani ,H (2019). "Welcome to the tidyverse." *Journal of Open Source Software*, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
